{"version":3,"file":"story.js","sourceRoot":"","sources":["../../src/components/story.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nimport { ColorLockView } from \"./clock\";\r\nimport { DirectionLockView } from \"./dlock\";\r\nimport { NumberLockView } from \"./nlock\";\r\nimport { WordLockView } from \"./wlock\";\r\nimport { FinalView } from \"./final\";\r\n\r\nimport Mars from \"../images/mars.jpg\"\r\nimport Computer from \"../images/computer.jpg\"\r\nimport Telescope from \"../images/telescope.jpg\"\r\nimport Freezer from \"../images/freezer.jpg\"\r\nimport Trajectory from \"../images/trajectory.jpg\"\r\n\r\nexport function StoryView(props: {}): JSX.Element {\r\n    const [computerUnlocked, setComputerUnlocked] = useState(false);\r\n    const [telescopeUnlocked, setTelescopeUnlocked] = useState(false);\r\n    const [freezerUnlocked, setFreezerUnlocked] = useState(false);\r\n    const [trajectoryUnlocked, setTrajectoryUnlocked] = useState(false);\r\n\r\n    const [component, setComponent]: [JSX.Element, React.Dispatch<React.SetStateAction<JSX.Element>>] = useState(undefined);\r\n\r\n    const toStory = () => {\r\n        setComponent(undefined);\r\n    }\r\n\r\n    const numberLock = (\r\n        <NumberLockView \r\n            onDone={() => { setComputerUnlocked(true); toStory(); }}\r\n            onBack={toStory}\r\n            />\r\n    );\r\n\r\n    const wordLock = (\r\n        <WordLockView\r\n            onDone={() => { setTelescopeUnlocked(true); toStory() }}\r\n            onBack={toStory}\r\n            />\r\n    );\r\n\r\n    const colorLock = ColorLockView({\r\n        onDone: () => { setFreezerUnlocked(true); toStory() },\r\n        onBack: toStory });\r\n\r\n    const directionLock = (\r\n        <DirectionLockView\r\n            onDone={() => { setTrajectoryUnlocked(true); toStory( )}}\r\n            onBack={toStory}\r\n            />\r\n    );\r\n\r\n    const computer = () => {\r\n        if (computerUnlocked) {\r\n            return (\r\n                <div>\r\n                    <img src={Computer}></img>\r\n                    <p>The computer is crunching numbers...</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>Getting back to Earth requires some advanced math, so you need to <a href=\"#\" onClick={ () => setComponent(numberLock) }>use the computer</a>.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const telescope = () => {\r\n        if (telescopeUnlocked) {\r\n            return (\r\n                <div>\r\n                    <img src={Telescope}></img>\r\n                    <p>You can see Earth through the telescope.</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>Look <a href=\"#\" onClick={ () => setComponent(wordLock) }>through the telescope</a> to figure out the best time to launch.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const freezer = () => {\r\n        if (freezerUnlocked) {\r\n            return (\r\n                <div>\r\n                    <img src={Freezer}></img>\r\n                    <p>You found some frozen lasagna. Yum!</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>You need to <a href=\"#\" onClick={ () => setComponent(colorLock) }>gather supplies</a> for the long trip back.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const trajectory = () => {\r\n        if (trajectoryUnlocked) {\r\n            return (\r\n                <div>\r\n                    <img src={Trajectory}></img>\r\n                    <p>You know exactly how to get home</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p><a href=\"#\" onClick={ () => setComponent(directionLock) }>Plot the trajectory</a> of your rocket before taking off.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const launch = () => {\r\n        if (computerUnlocked && telescopeUnlocked && freezerUnlocked && trajectoryUnlocked) {\r\n            return (\r\n                <div>\r\n                    <p>You are ready to take off.</p>\r\n                    <button onClick={ () => setComponent(<FinalView/>) }>Launch</button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderStory = () => {\r\n        if (component == undefined) {\r\n            return (\r\n                <div className=\"story\">\r\n                    <h1>Escape from the red planet</h1>\r\n                    <p>You are trapped on Mars!</p>\r\n                    <img src={Mars}></img>\r\n                    <p>You need to escape and get back to Earth.</p>\r\n                    { computer() }\r\n                    { telescope() }\r\n                    { freezer() }\r\n                    { trajectory() }\r\n                    { launch() }\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                component\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderStory()\r\n    );\r\n}\r\n"]}